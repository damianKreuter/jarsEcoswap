version: "3"
services:

  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
      - "8085:8085"
      - "8880:8880" #SSL MS-USERS
      - "8885:8885" #SSL MS-AUTENTICACION
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - acme:/etc/acme.sh
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/etc/acme.sh

  nginx-web:
    image: ecoswap-front
    container_name: web-ecoswap
    build:
      context: front-angular
      dockerfile: ./Dockerfile
    restart: always
    expose:
      - "80"
    depends_on:
      - nginx-proxy
      - letsencrypt
    environment:
      - VIRTUAL_HOST=ecoswapp.com,www.ecoswapp.com
      - LETSENCRYPT_HOST=ecoswapp.com,www.ecoswapp.com
      - LETSENCRYPT_EMAIL=webmaster@ecoswapp.com

  back-aunteticacion:
    image: back-aunteticacion
    container_name: back-aunteticacion-container
    build: 
      context: ms-autenticacion
      dockerfile: ./Dockerfile
    restart: always
    depends_on:
      - nginx-web
    volumes:
      - ./keystore.p12:/keystore.p12
    expose:
      - "8085"
    networks:
      - default

  back-users:
    image: back-users
    container_name: back-user-container 
    build: 
      context: ms-users
      dockerfile: ./Dockerfile
    restart: always
    volumes:
      - ./keystore.p12:/keystore.p12
    expose:
      - "8080"
    networks:
      - default

volumes: 
  certs:
  html:
  vhostd:
  acme:





  /home/ubuntu/ecoswap/jarsEcoswap/cert/ecoswapp.com/keystore.p12



cp -R /home/ubuntu/ecoswap/jarsEcoswap/cert/ecoswapp.com/keystore.p12 /home/ubuntu/ecoswap/jarsEcoswap/proxy-test

openssl pkcs12 -export -in fullchain.pem -inkey privkey.pem -out keystore.p12 

docker rmi 7c289fe3bb2e
docker rmi fa38fdc2b4be
docker rmi 66af2ec269e6
docker rmi a6ea77c989ae
docker rmi d37ab592f70b
docker rmi 433dbc17191a
docker rmi 01c5a79cd37e


docker rm c8df1f58ae37
docker rm 4d9250491dd8
docker rm 5039084e00b1
docker rm 31781b942e39
docker rm 6e02a1f80a61