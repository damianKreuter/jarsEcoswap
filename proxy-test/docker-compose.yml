version: "3"
services:

  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - acme:/etc/acme.sh
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/etc/acme.sh

  nginx-web:
    image: ecoswap-front
    container_name: web-ecoswap
    build:
      context: front-angular
      dockerfile: ./Dockerfile
    restart: always
    expose:
      - "80"
    depends_on:
      - nginx-proxy
      - letsencrypt
    environment:
      - VIRTUAL_HOST=ecoswap.com.ar,www.ecoswap.com.ar
      - LETSENCRYPT_HOST=ecoswap.com.ar,www.ecoswap.com.ar
      - LETSENCRYPT_EMAIL=webmaster@ecoswapp.com

  back-aunteticacion:
    image: back-aunteticacion
    container_name: back-aunteticacion-container
    build: 
      context: ms-autenticacion
      dockerfile: ./Dockerfile
    restart: always
    depends_on:
      - nginx-web
    volumes:
      - ./keystore.p12:/keystore.p12
    port:
      - "8085:8085"
    environment:
      - HOST=0.0.0.0
      - PORT=8085

  back-users:
    image: back-users
    container_name: back-user-container 
    build: 
      context: ms-users
      dockerfile: ./Dockerfile
    restart: always
    volumes:
      - ./keystore.p12:/keystore.p12
    port:
      - "8080:8080"
    environment:
      - HOST=0.0.0.0
      - PORT=8080

volumes: 
  certs:
  html:
  vhostd:
  acme: